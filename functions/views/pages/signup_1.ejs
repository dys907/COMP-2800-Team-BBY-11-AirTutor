<!doctype html>
<html lang="en">

<head>
    <title>Air Tutor | Sign Up Verification</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="./styles/signup.css">

    <%- include("../partials/favicon.ejs") %>
</head>

<body>
    <h3>Create your account</h3>

    <!--Content-->

    <div class="text-center">
        <h1>Email verification</h1>
        <h2>To begin your signup process, please input your email address on the field below</h2>

        <label for="emailSignupField">Email</label>
        <input type='email' class='form-control' name='emailSignupField' id='emailSignupField'>
        <button id="verify">Send a verification link to my email</button>

        <!-- <button id="submit" type='submit' onclick='signup()'>Sign up</button> -->

        <!-- Firebase javascripts -->
        <script src="https://www.gstatic.com/firebasejs/7.14.2/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/7.14.2/firebase-auth.js"></script>
        <script src="https://www.gstatic.com/firebasejs/7.14.2/firebase-firestore.js"></script>

        <script src="scripts/firebase.js"></script>

        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
            integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous">
            </script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
            integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous">
            </script>

        <!-- Optional JavaScript -->
        <script>
            document.getElementById("verify").addEventListener("click", email_verify)
            function email_verify() {
                console.log("it works")
                document.body.style.backgroundColor = "red";

                var actionCodeSettings = {
                    // URL you want to redirect back to. The domain (www.example.com) for this
                    // URL must be whitelisted in the Firebase Console.
                    url: 'https://airtutormvp.web.app/signup',
                    // This must be true.
                    handleCodeInApp: true,
                    iOS: {
                        bundleId: 'com.example.ios' //not applicable
                    },
                    android: {
                        packageName: 'com.example.android', //not applicable
                        installApp: true,
                        minimumVersion: '12'
                    },
                    dynamicLinkDomain: 'example.page.link' //not applicable
                };

                var email_to_verify = document.getElementById('emailSignupField').value;

                firebase.auth().sendSignInLinkToEmail(email_to_verify, actionCodeSettings)
                    .then(function () {
                        // The link was successfully sent. Inform the user.
                        // Save the email locally so you don't need to ask the user for it again
                        // if they open the link on the same device.
                        window.localStorage.setItem('emailForSignIn', email_to_verify);
                    })
                    .catch(function (error) {
                        // Some error occurred, you can inspect the code: error.code
                        alert(error.message);
                    });


                // Confirm the link is a sign-in with email link.
                if (firebase.auth().isSignInWithEmailLink(window.location.href)) {
                    // Additional state parameters can also be passed via URL.
                    // This can be used to continue the user's intended action before triggering
                    // the sign-in operation.
                    // Get the email if available. This should be available if the user completes
                    // the flow on the same device where they started it.
                    email_to_verify = window.localStorage.getItem('emailForSignIn');
                    if (!email) {
                        // User opened the link on a different device. To prevent session fixation
                        // attacks, ask the user to provide the associated email again. For example:
                        email_to_verify = window.prompt('Please provide your email for confirmation');
                    }
                    // The client SDK will parse the code from the link for you.
                    firebase.auth().signInWithEmailLink(email_to_verify, window.location.href)
                        .then(function (result) {
                            // Clear email from storage.
                            window.localStorage.removeItem('emailForSignIn');
                            // You can access the new user via result.user
                            // Additional user info profile not available via:
                            // result.additionalUserInfo.profile == null
                            // You can check if the user is new or existing:
                            // result.additionalUserInfo.isNewUser
                        })
                        .catch(function (error) {
                            // Some error occurred, you can inspect the code: error.code
                            // Common errors could be invalid email and invalid or expired OTPs.
                        });
                }

                // After asking the user for their email.
                email_to_verify = window.prompt('Please provide your email');
                firebase.auth().fetchSignInMethodsForEmail(email_to_verify)
                    .then(function (signInMethods) {
                        // This returns the same array as fetchProvidersForEmail but for email
                        // provider identified by 'password' string, signInMethods would contain 2
                        // different strings:
                        // 'emailLink' if the user previously signed in with an email/link
                        // 'password' if the user has a password.
                        // A user could have both.
                        if (signInMethods.indexOf(
                            firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD) != -1) {
                            // User can sign in with email/password.
                        }
                        if (signInMethods.indexOf(
                            firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD) != -1) {
                            // User can sign in with email/link.
                        }
                    })
                    .catch(function (error) {
                        // Some error occurred, you can inspect the code: error.code
                    });
            }
        </script>
</body>

</html>